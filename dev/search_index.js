var documenterSearchIndex = {"docs":
[{"location":"sections/","page":"Sections","title":"Sections","text":"CurrentModule = Cthonios","category":"page"},{"location":"sections/#Sections","page":"Sections","title":"Sections","text":"","category":"section"},{"location":"sections/","page":"Sections","title":"Sections","text":"Within Cthonios, sections refer to groups or \"blocks\" of elements that share a common element topology and material model. We allow by default for each element to possess different fixed material properties and an arbitrary number of state variables. Since the material model is the same for all elements in a section, the number of state variables will be the same at each element/quadrature point.","category":"page"},{"location":"sections/#Input-file-syntax","page":"Sections","title":"Input file syntax","text":"","category":"section"},{"location":"sections/","page":"Sections","title":"Sections","text":"setup_sections","category":"page"},{"location":"sections/#Cthonios.setup_sections","page":"Sections","title":"Cthonios.setup_sections","text":"setup_sections(\n    input_settings::Vector{Dict{Symbol, Any}},\n    mesh::FiniteElementContainers.FileMesh,\n    dof\n) -> Tuple{NamedTuple, Vararg{Any, 4}}\n\n\n\n\n\n\n","category":"function"},{"location":"sections/#TotalLagrangeSection","page":"Sections","title":"TotalLagrangeSection","text":"","category":"section"},{"location":"sections/","page":"Sections","title":"Sections","text":"TotalLagrangeSection","category":"page"},{"location":"sections/#Cthonios.TotalLagrangeSection","page":"Sections","title":"Cthonios.TotalLagrangeSection","text":"block_id::Any\nfspace::Any\nformulation::Any\nmodel::Any\n\nSection for total Lagrangia (the actual way to spell his name) formulations\n\n\n\n\n\n","category":"type"},{"location":"functions/","page":"Functions","title":"Functions","text":"CurrentModule = Cthonios","category":"page"},{"location":"functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"Functions can be used to help drive boundary conditions, initial conditions, etc.","category":"page"},{"location":"functions/#Index","page":"Functions","title":"Index","text":"","category":"section"},{"location":"functions/#Types","page":"Functions","title":"Types","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"ScalarFunction\nScalarFunctionWrapperArray","category":"page"},{"location":"functions/#Cthonios.ScalarFunction","page":"Functions","title":"Cthonios.ScalarFunction","text":"mutable struct FunctionWrapper{T1, Tuple{StaticArraysCore.SArray{Tuple{D}, T2, 1, D}, T3}}\n\n\n\n\n\n","category":"type"},{"location":"functions/#Cthonios.ScalarFunctionWrapperArray","page":"Functions","title":"Cthonios.ScalarFunctionWrapperArray","text":"Array{T,N} <: AbstractArray{T,N}\n\nN-dimensional dense array with elements of type T.\n\n\n\n\n\n","category":"type"},{"location":"functions/#Useful-methods","page":"Functions","title":"Useful methods","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"setup_function\nsetup_functions","category":"page"},{"location":"functions/#Cthonios.setup_function","page":"Functions","title":"Cthonios.setup_function","text":"setup_function(inputs::Dict{Symbol, Any}) -> Any\n\n\nThis method constructs a Function from a a dictionary of inputs. Typically this will be called from setup_functions which will recieve a vector of dictionaries from a parsed yaml file.\n\nThe syntax in the input file should mimic the following\n\nbc_name:\n  type: ScalarFunction{NDIM, Float64, Float64, Float64}\n  expression: (x, t) -> 1.0 * t\n\n\n\n\n\n","category":"function"},{"location":"functions/#Cthonios.setup_functions","page":"Functions","title":"Cthonios.setup_functions","text":"setup_functions(inputs::Vector{Dict{Symbol, Any}}) -> Vector\n\n\nInput file syntax\n\nfunctions:\n  bc_name_1:\n    type: ScalarFunction{NDIM, Float64, Float64, Float64}\n    expression: (x, t) -> 1.0 * t\n  bc_name_2:\n    type: ScalarFunction{NDIM, Float64, Float64, Float64}\n    expression: (x, t) -> 1.0 * x * t\n  ...\n  bc_name_n:\n    type: ScalarFunction{NDIM, Float64, Float64, Float64}\n    expression: (x, t) -> 0.0\n\n\n\n\n\n","category":"function"},{"location":"materials/","page":"Materials","title":"Materials","text":"CurrentModule = Cthonios","category":"page"},{"location":"materials/#Materials","page":"Materials","title":"Materials","text":"","category":"section"},{"location":"materials/","page":"Materials","title":"Materials","text":"Cthonios utilizes ConstitutiveModels.jl as a material model backend.","category":"page"},{"location":"materials/","page":"Materials","title":"Materials","text":"Here is an example for how to define multiple materials within an input file","category":"page"},{"location":"materials/","page":"Materials","title":"Materials","text":"materials:\n  metal_linear:\n    model: LinearElastic\n    properties:\n      youngs modulus: 1.0\n      poissons ratio: 0.3\n  soft rubber:\n    model: NeoHookean\n    properties:\n      bulk modulus: 50.0\n      shear modulus: 1.0","category":"page"},{"location":"materials/#Useful-methods","page":"Materials","title":"Useful methods","text":"","category":"section"},{"location":"materials/","page":"Materials","title":"Materials","text":"setup_material","category":"page"},{"location":"materials/#Cthonios.setup_material","page":"Materials","title":"Cthonios.setup_material","text":"setup_material(input_settings::Dict{Symbol, Any}) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"domains/","page":"Domains","title":"Domains","text":"CurrentModule = Cthonios","category":"page"},{"location":"domains/#Domains","page":"Domains","title":"Domains","text":"","category":"section"},{"location":"domains/","page":"Domains","title":"Domains","text":"A domain in Cthonios is a group of element sections and all the associated datastructures necessary to run a finite element calculation. Different types of domains are used for different problems, e.g. quasi-static vs. dynamics problems have different requirements and solution strategies.","category":"page"},{"location":"domains/#Input-file-syntax-example","page":"Domains","title":"Input file syntax example","text":"","category":"section"},{"location":"domains/","page":"Domains","title":"Domains","text":"domains:\n  domain_1:\n    mesh:\n      ...\n    boundary conditions:\n      ...\n    sections:\n      ...\n    time stepper:\n      ...","category":"page"},{"location":"domains/#Quasi-static-Domain","page":"Domains","title":"Quasi-static Domain","text":"","category":"section"},{"location":"domains/","page":"Domains","title":"Domains","text":"Quasi-static domains are appropriate for problems where the following equation holds","category":"page"},{"location":"domains/","page":"Domains","title":"Domains","text":"nablacdot mathbfP + mathbfb = mathbf0 where mathbfP is the first Piola-Kirchoff stress, nabla is the gradient operator with respsect to the reference corrdinates, and mathbfb is a body force.","category":"page"},{"location":"domains/#Index","page":"Domains","title":"Index","text":"","category":"section"},{"location":"domains/","page":"Domains","title":"Domains","text":"Modules = [Cthonios]\nPages = [\"domains/QuasiStaticDomain.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"domains/#Cthonios.QuasiStaticDomain","page":"Domains","title":"Cthonios.QuasiStaticDomain","text":"\n\n\n\n","category":"type"},{"location":"domains/#Cthonios.QuasiStaticDomain-Tuple{D} where D<:Dict{Symbol, Any}","page":"Domains","title":"Cthonios.QuasiStaticDomain","text":"QuasiStaticDomain(\n    input_settings::Dict{Symbol, Any}\n) -> Cthonios.QuasiStaticDomain{Dof, Funcs, Vector{Int64}, Vector{Int64}, Vector{Int64}, Sections, DomainCache} where {Dof<:(FiniteElementContainers.DofManager{Int64, _A, _B, Vector{Float64}, _C} where {_A, _B, _C<:AbstractVector{Int64}}), Funcs<:(Vector), Sections<:NamedTuple, DomainCache<:(Cthonios.QuasiStaticDomainCache{Time, V1, _A, V3, _B, _C, Vector{Float64}} where {Time<:Cthonios.ConstantTimeStepper, V1<:(FiniteElementContainers.VectorizedNodalField{_A, 2, _B, _C, _D} where {_A, _B, _C, _D<:AbstractVector{_A}}), _A, V3<:(FiniteElementContainers.VectorizedNodalField{Float64, 2, _A, _B, Vector{Float64}} where {_A, _B}), _B, _C})}\n\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.QuasiStaticDomain-Tuple{String, Any}","page":"Domains","title":"Cthonios.QuasiStaticDomain","text":"QuasiStaticDomain(\n    input_file::String,\n    key\n) -> Cthonios.QuasiStaticDomain{Dof, Funcs, Vector{Int64}, Vector{Int64}, Vector{Int64}, Sections, DomainCache} where {Dof<:(FiniteElementContainers.DofManager{Int64, _A, _B, Vector{Float64}, _C} where {_A, _B, _C<:AbstractVector{Int64}}), Funcs<:(Vector), Sections<:NamedTuple, DomainCache<:(Cthonios.QuasiStaticDomainCache{Time, V1, _A, V3, _B, _C, Vector{Float64}} where {Time<:Cthonios.ConstantTimeStepper, V1<:(FiniteElementContainers.VectorizedNodalField{_A, 2, _B, _C, _D} where {_A, _B, _C, _D<:AbstractVector{_A}}), _A, V3<:(FiniteElementContainers.VectorizedNodalField{Float64, 2, _A, _B, Vector{Float64}} where {_A, _B}), _B, _C})}\n\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.QuasiStaticDomainCache","page":"Domains","title":"Cthonios.QuasiStaticDomainCache","text":"time::Any\nX::Any\nUu::Any\nΔUu::Any\nU::Any\nprops::Any\nstate_old::Any\nstate_new::Any\nΠ::Any\nΠs::Any\nf::Any\nV::Any\nHv::Any\n\n\n\n\n\n","category":"type"},{"location":"domains/#Base.similar-Tuple{Cthonios.QuasiStaticDomainCache}","page":"Domains","title":"Base.similar","text":"similar(\n    cache::Cthonios.QuasiStaticDomainCache\n) -> Cthonios.QuasiStaticDomainCache\n\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.step!-Tuple{Cthonios.QuasiStaticDomain}","page":"Domains","title":"Cthonios.step!","text":"step!(domain::Cthonios.QuasiStaticDomain) -> Int64\n\n\nAdvances the domain's time stepper one step.\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.unpack-Tuple{Cthonios.QuasiStaticDomainCache}","page":"Domains","title":"Cthonios.unpack","text":"unpack(\n    cache::Cthonios.QuasiStaticDomainCache\n) -> NTuple{13, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.update_bcs!-Tuple{Any, Cthonios.QuasiStaticDomain, Any}","page":"Domains","title":"Cthonios.update_bcs!","text":"update_bcs!(U, domain::Cthonios.QuasiStaticDomain, Xs)\n\n\nThis method updates the nodes with dirichlet bcs in U\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.update_fields!-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any}","page":"Domains","title":"Cthonios.update_fields!","text":"update_fields!(\n    U,\n    domain::Cthonios.QuasiStaticDomain,\n    Xs,\n    Uu\n) -> AbstractVector{<:Number}\n\n\nUpdates both the bcs and unknowns in U based on the current free vs. fixed dof layout in domain.dof and the bcs currently in the domain.\n\nI think this one is deprecated?\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.update_unknown_dofs!-Tuple{Cthonios.QuasiStaticDomain}","page":"Domains","title":"Cthonios.update_unknown_dofs!","text":"update_unknown_dofs!(d::Cthonios.QuasiStaticDomain) -> Any\n\n\nThis methods assumes the bc dofs and func ids are already properly set in the domain coming in\n\n\n\n\n\n","category":"method"},{"location":"domains/#Cthonios.update_unknowns!-Tuple{Any, Cthonios.QuasiStaticDomain, Any}","page":"Domains","title":"Cthonios.update_unknowns!","text":"update_unknowns!(\n    U,\n    domain::Cthonios.QuasiStaticDomain,\n    Uu\n) -> AbstractVector{<:Number}\n\n\nUpdates the unknowns in U with the values in Uu based on the current free vs. fixed dof layout in domain.dof.\n\nI think this one is deprecated?\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"CurrentModule = Cthonios","category":"page"},{"location":"nonlinear_solvers/#Nonlinear-Solvers","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"","category":"section"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"One of our goals is to make adding new and hacking existing nonlinear solvers easy!","category":"page"},{"location":"nonlinear_solvers/#Input-File-Syntax-Example","page":"Nonlinear Solvers","title":"Input File Syntax Example","text":"","category":"section"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"Below is an example input file block for a trust region solver that leverages a direct solver with an LDLT factorization. The nonlinear solver is also utilizing warm start to improve the first few iterations of each load step.","category":"page"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"linear solvers:\n  direct:\n    type: DirectLinearSolver\n    factorization method: ldl\n\nnonlinear solvers:\n  trs:\n    type: TrustRegionSolver\n    linear solver: direct\n    warm start: on","category":"page"},{"location":"nonlinear_solvers/#Newton-Solver","page":"Nonlinear Solvers","title":"Newton Solver","text":"","category":"section"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"Modules = [Cthonios]\nPages = [\"solvers/NewtonSolver.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"nonlinear_solvers/#Cthonios.NewtonSolver","page":"Nonlinear Solvers","title":"Cthonios.NewtonSolver","text":"settings::Cthonios.NewtonSolverSettings\nlinear_solver::Cthonios.AbstractLinearSolver\nuse_warm_start::Bool\n\n\n\n\n\n","category":"type"},{"location":"nonlinear_solvers/#Cthonios.NewtonSolver-Union{Tuple{D}, Tuple{D, Cthonios.QuasiStaticDomain, Any}} where D<:Dict","page":"Nonlinear Solvers","title":"Cthonios.NewtonSolver","text":"NewtonSolver(\n    input_settings::Dict,\n    domain::Cthonios.QuasiStaticDomain,\n    backend\n) -> Cthonios.NewtonSolver{Cthonios.NewtonSolverSettings}\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.NewtonSolverSettings","page":"Nonlinear Solvers","title":"Cthonios.NewtonSolverSettings","text":"max_steps::Int64\nrelative_tolerance::Float64\nabsolute_tolerance::Float64\n\n\n\n\n\n","category":"type"},{"location":"nonlinear_solvers/#Cthonios.NewtonSolverSettings-Tuple{D} where D<:Dict","page":"Nonlinear Solvers","title":"Cthonios.NewtonSolverSettings","text":"NewtonSolverSettings(\n    input_settings::Dict\n) -> Cthonios.NewtonSolverSettings\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.solve!-Tuple{Cthonios.NewtonSolver, Cthonios.QuasiStaticDomain, Cthonios.CthoniosCommon}","page":"Nonlinear Solvers","title":"Cthonios.solve!","text":"solve!(\n    solver::Cthonios.NewtonSolver,\n    domain::Cthonios.QuasiStaticDomain,\n    common::Cthonios.CthoniosCommon\n)\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Trust-Region-Solver","page":"Nonlinear Solvers","title":"Trust Region Solver","text":"","category":"section"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"Modules = [Cthonios]\nPages = [\"solvers/TrustRegionSolver.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"nonlinear_solvers/#Cthonios.TrustRegionSolver","page":"Nonlinear Solvers","title":"Cthonios.TrustRegionSolver","text":"settings::Cthonios.TrustRegionSolverSettings\nlinear_solver::Cthonios.AbstractLinearSolver\ncauchy_point::AbstractVector\nq_newton_point::AbstractVector\nd::AbstractVector\ny_scratch_1::AbstractVector\ny_scratch_2::AbstractVector\ny_scratch_3::AbstractVector\ny_scratch_4::AbstractVector\nuse_warm_start::Bool\n\n\n\n\n\n","category":"type"},{"location":"nonlinear_solvers/#Cthonios.TrustRegionSolver-Union{Tuple{D}, Tuple{D, Cthonios.QuasiStaticDomain, Any}} where D<:Dict{Symbol, Any}","page":"Nonlinear Solvers","title":"Cthonios.TrustRegionSolver","text":"TrustRegionSolver(\n    input_settings::Dict{Symbol, Any},\n    domain::Cthonios.QuasiStaticDomain,\n    backend\n) -> Cthonios.TrustRegionSolver{Cthonios.TrustRegionSolverSettings}\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.TrustRegionSolverSettings","page":"Nonlinear Solvers","title":"Cthonios.TrustRegionSolverSettings","text":"t_1::Float64\nt_2::Float64\nη_1::Float64\nη_2::Float64\nη_3::Float64\nmax_trust_iters::Int64\ntol::Float64\nmax_cg_iters::Int64\nmax_cumulative_cg_iters::Int64\ncg_tol::Float64\ncg_inexact_solve_ratio::Float64\ntr_size::Float64\nmin_tr_size::Float64\ncheck_stability::Bool\nuse_preconditioned_inner_product_for_cg::Bool\nuse_incremental_objective::Bool\ndebug_info::Bool\nover_iter::Int64\n\n\n\n\n\n","category":"type"},{"location":"nonlinear_solvers/#Cthonios.calculate_cauchy_point!-NTuple{6, Any}","page":"Nonlinear Solvers","title":"Cthonios.calculate_cauchy_point!","text":"calculate_cauchy_point!(\n    cauchy_point,\n    solver,\n    common,\n    g,\n    Hg,\n    tr_size\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.dog_leg_step!-NTuple{6, Any}","page":"Nonlinear Solvers","title":"Cthonios.dog_leg_step!","text":"dog_leg_step!(\n    d,\n    solver,\n    common,\n    cauchy_point,\n    q_newton_point,\n    tr_size\n)\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.minimize_trust_region_sub_problem!-Union{Tuple{V}, Tuple{Any, Cthonios.TrustRegionSolver, Any, Cthonios.CthoniosCommon, V, Any, Float64}} where V<:(AbstractVector)","page":"Nonlinear Solvers","title":"Cthonios.minimize_trust_region_sub_problem!","text":"minimize_trust_region_sub_problem!(\n    z,\n    solver::Cthonios.TrustRegionSolver,\n    domain,\n    common::Cthonios.CthoniosCommon,\n    x::AbstractVector,\n    r_in,\n    tr_size::Float64\n) -> Tuple{Symbol, Int64}\n\n\nminimize r * z + 0.5 * z * J * z\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.preconditioner!-NTuple{4, Any}","page":"Nonlinear Solvers","title":"Cthonios.preconditioner!","text":"preconditioner!(solver, domain, common, Uu)\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.solve!-Tuple{Cthonios.TrustRegionSolver, Cthonios.QuasiStaticDomain, Cthonios.CthoniosCommon}","page":"Nonlinear Solvers","title":"Cthonios.solve!","text":"solve!(\n    solver::Cthonios.TrustRegionSolver,\n    domain::Cthonios.QuasiStaticDomain,\n    common::Cthonios.CthoniosCommon\n)\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.update_tr_size-NTuple{7, Any}","page":"Nonlinear Solvers","title":"Cthonios.update_tr_size","text":"update_tr_size(\n    solver,\n    model_objective,\n    real_objective,\n    step_type,\n    tr_size,\n    real_res_norm,\n    g_norm\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#General","page":"Nonlinear Solvers","title":"General","text":"","category":"section"},{"location":"nonlinear_solvers/","page":"Nonlinear Solvers","title":"Nonlinear Solvers","text":"Modules = [Cthonios]\nPages = [\"solvers/NonlinearSolvers.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"nonlinear_solvers/#Cthonios.NonlinearSolver","page":"Nonlinear Solvers","title":"Cthonios.NonlinearSolver","text":"\n\n\n\n","category":"type"},{"location":"nonlinear_solvers/#Cthonios.NonlinearSolverSettings","page":"Nonlinear Solvers","title":"Cthonios.NonlinearSolverSettings","text":"\n\n\n\n","category":"type"},{"location":"nonlinear_solvers/#Cthonios.gradient-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any}","page":"Nonlinear Solvers","title":"Cthonios.gradient","text":"gradient(\n    solver,\n    domain::Cthonios.QuasiStaticDomain,\n    common,\n    u\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.hessian-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any}","page":"Nonlinear Solvers","title":"Cthonios.hessian","text":"hessian(\n    solver,\n    domain::Cthonios.QuasiStaticDomain,\n    common,\n    u\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.hvp-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any, Any}","page":"Nonlinear Solvers","title":"Cthonios.hvp","text":"hvp(\n    solver,\n    domain::Cthonios.QuasiStaticDomain,\n    common,\n    u,\n    v\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.objective-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any}","page":"Nonlinear Solvers","title":"Cthonios.objective","text":"objective(\n    solver,\n    domain::Cthonios.QuasiStaticDomain,\n    common,\n    u\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.objective_and_gradient-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any}","page":"Nonlinear Solvers","title":"Cthonios.objective_and_gradient","text":"objective_and_gradient(\n    solver,\n    domain::Cthonios.QuasiStaticDomain,\n    common,\n    u\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.objective_gradient_and_hessian-Tuple{Any, Cthonios.QuasiStaticDomain, Any, Any}","page":"Nonlinear Solvers","title":"Cthonios.objective_gradient_and_hessian","text":"objective_gradient_and_hessian(\n    solver,\n    domain::Cthonios.QuasiStaticDomain,\n    common,\n    u\n) -> Tuple{Any, Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"nonlinear_solvers/#Cthonios.update_unknown_dofs!-Tuple{Cthonios.NonlinearSolver, Cthonios.QuasiStaticDomain}","page":"Nonlinear Solvers","title":"Cthonios.update_unknown_dofs!","text":"update_unknown_dofs!(\n    solver::Cthonios.NonlinearSolver,\n    d::Cthonios.QuasiStaticDomain\n)\n\n\n\n\n\n\n","category":"method"},{"location":"running_cthonios/","page":"Running Cthonios","title":"Running Cthonios","text":"CurrentModule = Cthonios","category":"page"},{"location":"running_cthonios/#Running-from-the-REPL","page":"Running Cthonios","title":"Running from the REPL","text":"","category":"section"},{"location":"running_cthonios/","page":"Running Cthonios","title":"Running Cthonios","text":"To run Cthonios from the REPL one can utilize the following method","category":"page"},{"location":"running_cthonios/","page":"Running Cthonios","title":"Running Cthonios","text":"cthonios_main","category":"page"},{"location":"running_cthonios/#Cthonios.cthonios_main","page":"Running Cthonios","title":"Cthonios.cthonios_main","text":"cthonios_main(\n    input_file::String,\n    verbose::Bool,\n    ka_backend_str::String\n)\n\n\n\n\n\n\n","category":"function"},{"location":"running_cthonios/#Running-Cthonios-as-an-executable","page":"Running Cthonios","title":"Running Cthonios as an executable","text":"","category":"section"},{"location":"running_cthonios/","page":"Running Cthonios","title":"Running Cthonios","text":"To run Cthonios as an executable, one must first run the CthoniosBuild.jl script (assuming one has PackageCompiler installed already). This will build an executable called cthonios in a build folder. To run Cthonios you can use the following command","category":"page"},{"location":"running_cthonios/","page":"Running Cthonios","title":"Running Cthonios","text":"/path/to/cthonios -i <input-file.yaml>","category":"page"},{"location":"running_cthonios/#Complete-example-input-file","page":"Running Cthonios","title":"Complete example input file","text":"","category":"section"},{"location":"running_cthonios/","page":"Running Cthonios","title":"Running Cthonios","text":"# Global scope\nfunctions:\n  displacement_ramp: \n    type: ScalarFunction{2, Float64, Float64, Float64}\n    expression: (x, t) -> -0.5 * t\n  zero_func:\n    type: ScalarFunction{2, Float64, Float64, Float64}\n    expression: (x, t) -> 0.0\n\nmaterials:\n  soft rubber:\n    model: NeoHookean\n    properties:\n      bulk modulus: 50.0\n      shear modulus: 1.0\n\nlinear solvers:\n  direct:\n    type: DirectLinearSolver\n    factorization method: ldl\n\nnonlinear solvers:\n  trs:\n    type: TrustRegionSolver\n    linear solver: direct\n    warm start: on\n\n# Domains scope\ndomains:\n  domain_1:\n    mesh:\n      type: ExodusDatabase{Int32, Int32, Int32, Float64}\n      file name: window_pain_tri3.g\n\n    boundary conditions:\n      displacement: \n      - nodeset ids: [3]\n        dofs: [1, 2]\n        function: zero_func\n      - nodeset ids: [1]\n        dofs: [1]\n        function: zero_func\n      - nodeset ids: [1]\n        dofs: [2]\n        function: displacement_ramp\n\n    sections:\n    - type: TotalLagrangeSection\n      block id: 1\n      formulation: plane strain\n      material: soft rubber\n\n    time stepper:\n      type: ConstantTimeStepper\n      start time: 0.0\n      end time: 1.0\n      time step: 0.025\n\nproblems:\n  - type: ForwardProblem\n    domain: domain_1\n    solver: trs\n    results:\n      output file name: output.e\n      nodal fields:\n      - displacement\n      - internal force\n      element fields:\n      - properties\n      quadrature fields:\n      - state variables\n\n  - type: EnergySensitivityProblem\n    domain: domain_1\n    solver: trs\n    results:\n      output file name: gradients.e\n      nodal fields:\n      - displacement\n      - dcoordinates\n      element fields:\n      - dproperties","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Cthonios","category":"page"},{"location":"#Cthonios","page":"Home","title":"Cthonios","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Cthonios.","category":"page"},{"location":"linear_solvers/","page":"Linear Solvers","title":"Linear Solvers","text":"CurrentModule = Cthonios","category":"page"},{"location":"linear_solvers/#Linear-Solvers","page":"Linear Solvers","title":"Linear Solvers","text":"","category":"section"},{"location":"linear_solvers/","page":"Linear Solvers","title":"Linear Solvers","text":"This section describes the interface for linear solvers.","category":"page"},{"location":"linear_solvers/#Input-File-Syntax-Example","page":"Linear Solvers","title":"Input File Syntax Example","text":"","category":"section"},{"location":"linear_solvers/","page":"Linear Solvers","title":"Linear Solvers","text":"Below is an example input file block for a direct solver with an LDLT factorization.","category":"page"},{"location":"linear_solvers/","page":"Linear Solvers","title":"Linear Solvers","text":"linear solvers:\n  direct:\n    type: DirectLinearSolver\n    factorization method: ldl","category":"page"},{"location":"linear_solvers/#Direct-Solver","page":"Linear Solvers","title":"Direct Solver","text":"","category":"section"},{"location":"linear_solvers/","page":"Linear Solvers","title":"Linear Solvers","text":"Modules = [Cthonios]\nPages = [\"solvers/linear_solvers/DirectLinearSolver.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"linear_solvers/#Cthonios.DirectLinearSolver","page":"Linear Solvers","title":"Cthonios.DirectLinearSolver","text":"settings::Any\nassembler::Any\nfactorization::Any\n\n\n\n\n\n","category":"type"},{"location":"linear_solvers/#Cthonios.DirectLinearSolver-Tuple{Dict{Symbol, Any}, Cthonios.QuasiStaticDomain, Any}","page":"Linear Solvers","title":"Cthonios.DirectLinearSolver","text":"DirectLinearSolver(\n    input_settings::Dict{Symbol, Any},\n    domain::Cthonios.QuasiStaticDomain,\n    backend\n) -> Cthonios.DirectLinearSolver{Settings, Assembler, LDLFactorizations.LDLFactorization{Float64, Int64, Int64, Int64}} where {Settings<:Cthonios.DirectLinearSolverSettings, Assembler<:(FiniteElementContainers.StaticAssembler{Float64, Int64, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, Vector{Int64}, Vector{Int64}, Vector{Float64}} where {_A<:AbstractVector{Int64}, _B<:AbstractVector{Int64}, _C<:AbstractVector{Int64}, _D<:AbstractVector{Int64}, _E<:AbstractVector{Int64}, _F<:FiniteElementContainers.NodalField, _G<:AbstractVector{Float64}, _H, _I, _J, _K})}\n\n\n\n\n\n\n","category":"method"},{"location":"linear_solvers/#Cthonios.DirectLinearSolverSettings","page":"Linear Solvers","title":"Cthonios.DirectLinearSolverSettings","text":"factorization_method::Any\nfactorization_method!::Any\n\n\n\n\n\n","category":"type"},{"location":"linear_solvers/#Cthonios.DirectLinearSolverSettings-Tuple{Dict{Symbol, Any}}","page":"Linear Solvers","title":"Cthonios.DirectLinearSolverSettings","text":"DirectLinearSolverSettings(\n    input_settings::Dict{Symbol, Any}\n) -> Cthonios.DirectLinearSolverSettings\n\n\n\n\n\n\n","category":"method"},{"location":"linear_solvers/#Cthonios.solve!-Tuple{Any, Cthonios.DirectLinearSolver, Cthonios.QuasiStaticDomain, Cthonios.CthoniosCommon}","page":"Linear Solvers","title":"Cthonios.solve!","text":"solve!(\n    Uu,\n    solver::Cthonios.DirectLinearSolver,\n    domain::Cthonios.QuasiStaticDomain,\n    common::Cthonios.CthoniosCommon\n)\n\n\n\n\n\n\n","category":"method"},{"location":"linear_solvers/#Cthonios.update_unknown_dofs!-Tuple{Cthonios.DirectLinearSolver, Cthonios.QuasiStaticDomain}","page":"Linear Solvers","title":"Cthonios.update_unknown_dofs!","text":"update_unknown_dofs!(\n    solver::Cthonios.DirectLinearSolver,\n    domain::Cthonios.QuasiStaticDomain\n)\n\n\n\n\n\n\n","category":"method"},{"location":"linear_solvers/#General","page":"Linear Solvers","title":"General","text":"","category":"section"},{"location":"linear_solvers/","page":"Linear Solvers","title":"Linear Solvers","text":"Modules = [Cthonios]\nPages = [\"solvers/linear_solvers/LinearSolvers.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"linear_solvers/#Cthonios.AbstractLinearSolver","page":"Linear Solvers","title":"Cthonios.AbstractLinearSolver","text":"\n\n\n\n","category":"type"},{"location":"linear_solvers/#Cthonios.AbstractLinearSolverSettings","page":"Linear Solvers","title":"Cthonios.AbstractLinearSolverSettings","text":"\n\n\n\n","category":"type"},{"location":"linear_solvers/#Cthonios.setup_linear_solver-Tuple{Any, Any, Any}","page":"Linear Solvers","title":"Cthonios.setup_linear_solver","text":"setup_linear_solver(input_settings, domain, backend) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"linear_solvers/#Cthonios.update_unknown_dofs!-Tuple{FiniteElementContainers.StaticAssembler, Cthonios.QuasiStaticDomain}","page":"Linear Solvers","title":"Cthonios.update_unknown_dofs!","text":"update_unknown_dofs!(\n    assembler::FiniteElementContainers.StaticAssembler,\n    d::Cthonios.QuasiStaticDomain\n)\n\n\n\n\n\n\n","category":"method"}]
}
